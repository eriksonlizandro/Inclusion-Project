{"ast":null,"code":"var _jsxFileName = \"/Users/eriksonlizandro/Progra/inclusion-interview/factory-four/src/pages/home/index.js\",\n    _s = $RefreshSig$();\n\n/** @jsx jsx */\n\n/** @jsxRuntime classic */\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsx } from '@emotion/react'; // Local \n\nimport Box from '../../components/box';\nimport Text from '../../components/text';\nimport Card from '../../components/cards';\nimport TopMenu from '../../components/topMenu'; // Styles\n\nimport * as styles from './styles';\nimport { CardsGrid } from './styles'; //Utils\n\nimport { splitName, splitStringAndGetHostName } from '../../utils/splitName';\nimport { convertUnixToTime } from '../../utils/converUnixToTime'; // Change Request Time to API in Milliseconds\n\nconst requestTimeMilliseconds = 15000;\nconst endpoints = [\"https://api.factoryfour.com/accounts/health/status\", \"https://api.factoryfour.com/assets/health/status\", \"https://api.factoryfour.com/customers/health/status\", \"https://api.factoryfour.com/datapoints/health/status\", \"https://api.factoryfour.com/devices/health/status\", \"https://api.factoryfour.com/documents/health/status\", \"https://api.factoryfour.com/forms/health/status\", \"https://api.factoryfour.com/invites/health/status\", \"https://api.factoryfour.com/media/health/status\", \"https://api.factoryfour.com/messages/health/status\", \"https://api.factoryfour.com/namespaces/health/status\", \"https://api.factoryfour.com/orders/health/status\", \"https://api.factoryfour.com/patients/health/status\", \"https://api.factoryfour.com/relationships/health/status\", \"https://api.factoryfour.com/rules/health/status\", \"https://api.factoryfour.com/templates/health/status\", \"https://api.factoryfour.com/users/health/status\", \"https://api.factoryfour.com/workflows/health/status\"];\n\nconst Home = () => {\n  _s();\n\n  const [apiData, setApiData] = useState([]);\n\n  const getData = async () => {\n    const results = await Promise.all(endpoints.map(async url => {\n      try {\n        return await axios.get(url);\n      } catch (error) {\n        var _error$message, _error$response, _error$response2, _error$response3, _error$response4;\n\n        return {\n          data: {\n            hostname: splitStringAndGetHostName(url, '/'),\n            result: \"rejected\",\n            errMessage: (_error$message = error === null || error === void 0 ? void 0 : error.message) !== null && _error$message !== void 0 ? _error$message : 'Error',\n            statusCode: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) == 0 ? '503' : error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n            statusText: (error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.statusText) == \"\" ? 'Service Unavailable' : error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.statusText\n          }\n        };\n      }\n    }));\n    setApiData(results);\n  };\n\n  useEffect(() => {\n    getData();\n    const intv = setInterval(getData, requestTimeMilliseconds);\n    return () => clearInterval(intv);\n  }, []);\n  return jsx(React.Fragment, null, jsx(Box, {\n    className: \"container\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    css: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, jsx(TopMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, jsx(Text, {\n    color: \"white\",\n    fontSize: \"30px\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"STATUS DASHBOARD\"))), jsx(Box, {\n    mt: \"5%\",\n    mb: \"5%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, jsx(CardsGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, apiData === null || apiData === void 0 ? void 0 : apiData.map((card, index) => {\n    var _card$data, _card$data2, _card$data2$message, _splitName, _card$data3, _card$data4, _card$data5, _card$data6, _card$data6$errMessag, _card$data7, _card$data8, _card$data9;\n\n    return jsx(Box, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, jsx(Text, {\n      color: \"white\",\n      fontSize: \"25px\",\n      fontWeight: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, splitName(card === null || card === void 0 ? void 0 : (_card$data = card.data) === null || _card$data === void 0 ? void 0 : _card$data.hostname, '-'))), jsx(Box, {\n      width: \"90%\",\n      margin: \"10px\",\n      padding: \"5px\",\n      bgColor: card !== null && card !== void 0 && (_card$data2 = card.data) !== null && _card$data2 !== void 0 && (_card$data2$message = _card$data2.message) !== null && _card$data2$message !== void 0 && _card$data2$message.includes('Healthy') ? '#68dd97' : '#e53b3b',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, (_splitName = splitName(card === null || card === void 0 ? void 0 : (_card$data3 = card.data) === null || _card$data3 === void 0 ? void 0 : _card$data3.message, ':')) !== null && _splitName !== void 0 ? _splitName : 'Error'), jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, jsx(Text, {\n      color: \"white\",\n      fontSize: \"15px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, (card === null || card === void 0 ? void 0 : (_card$data4 = card.data) === null || _card$data4 === void 0 ? void 0 : _card$data4.result) != 'rejected' ? card === null || card === void 0 ? void 0 : (_card$data5 = card.data) === null || _card$data5 === void 0 ? void 0 : _card$data5.hostname : jsx(\"div\", {\n      style: {\n        color: '#e53b3b',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 31\n      }\n    }, card === null || card === void 0 ? void 0 : (_card$data6 = card.data) === null || _card$data6 === void 0 ? void 0 : (_card$data6$errMessag = _card$data6.errMessage) === null || _card$data6$errMessag === void 0 ? void 0 : _card$data6$errMessag.toUpperCase()), jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 31\n      }\n    }, card === null || card === void 0 ? void 0 : (_card$data7 = card.data) === null || _card$data7 === void 0 ? void 0 : _card$data7.statusCode), jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 31\n      }\n    }, card === null || card === void 0 ? void 0 : (_card$data8 = card.data) === null || _card$data8 === void 0 ? void 0 : _card$data8.statusText)))), jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, jsx(Text, {\n      color: \"white\",\n      fontSize: \"15px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, convertUnixToTime(card === null || card === void 0 ? void 0 : (_card$data9 = card.data) === null || _card$data9 === void 0 ? void 0 : _card$data9.time)))));\n  })))));\n};\n\n_s(Home, \"XS4vxfgOwg6YXXgDtcewhgQYniU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","Box","Text","Card","TopMenu","styles","CardsGrid","splitName","splitStringAndGetHostName","convertUnixToTime","requestTimeMilliseconds","endpoints","Home","apiData","setApiData","getData","results","Promise","all","map","url","get","error","data","hostname","result","errMessage","message","statusCode","response","status","statusText","intv","setInterval","clearInterval","container","card","index","includes","color","display","flexDirection","gap","toUpperCase","time"],"sources":["/Users/eriksonlizandro/Progra/inclusion-interview/factory-four/src/pages/home/index.js"],"sourcesContent":["/** @jsx jsx */\n/** @jsxRuntime classic */\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsx } from '@emotion/react';\n\n// Local \nimport Box from '../../components/box';\nimport Text from '../../components/text';\nimport Card from '../../components/cards';\nimport TopMenu from '../../components/topMenu';\n\n// Styles\nimport * as styles from './styles';\nimport { CardsGrid } from './styles';\n\n//Utils\nimport { splitName, splitStringAndGetHostName } from '../../utils/splitName';\nimport { convertUnixToTime } from '../../utils/converUnixToTime';\n\n// Change Request Time to API in Milliseconds\nconst requestTimeMilliseconds = 15000;\n\nconst endpoints = [\n  \"https://api.factoryfour.com/accounts/health/status\",\n  \"https://api.factoryfour.com/assets/health/status\",\n  \"https://api.factoryfour.com/customers/health/status\",\n  \"https://api.factoryfour.com/datapoints/health/status\",\n  \"https://api.factoryfour.com/devices/health/status\",\n  \"https://api.factoryfour.com/documents/health/status\",\n  \"https://api.factoryfour.com/forms/health/status\",\n  \"https://api.factoryfour.com/invites/health/status\",\n  \"https://api.factoryfour.com/media/health/status\",\n  \"https://api.factoryfour.com/messages/health/status\",\n  \"https://api.factoryfour.com/namespaces/health/status\",\n  \"https://api.factoryfour.com/orders/health/status\",\n  \"https://api.factoryfour.com/patients/health/status\",\n  \"https://api.factoryfour.com/relationships/health/status\",\n  \"https://api.factoryfour.com/rules/health/status\",\n  \"https://api.factoryfour.com/templates/health/status\",\n  \"https://api.factoryfour.com/users/health/status\",\n  \"https://api.factoryfour.com/workflows/health/status\",\n]\n\nconst Home = () => {\n  const [apiData, setApiData] = useState([]);\n\n  const getData = async () => {\n\n    const results = await Promise.all(endpoints.map(async url => {\n      try {\n        return await axios.get(url);                \n      } catch (error) {        \n        return {\n          data: {\n            hostname: splitStringAndGetHostName(url, '/'),\n            result: \"rejected\",\n            errMessage: error?.message ?? 'Error',\n            statusCode: error?.response?.status == 0 ? '503' : error?.response?.status,\n            statusText: error?.response?.statusText == \"\" ? 'Service Unavailable' : error?.response?.statusText,\n          }\n        };\n      }\n    }));\n    setApiData(results)\n  }\n\n  useEffect(() => {\n    getData();\n    const intv = setInterval(getData, requestTimeMilliseconds);\n    return () => clearInterval(intv);\n  }, []);\n\n  return (\n    <>\n      <Box\n        className=\"container\"\n        flexDirection=\"row\"\n        justifyContent=\"center\"\n        css={styles.container}\n      >\n        <TopMenu>\n          <Box>\n            <Text\n              color=\"white\"\n              fontSize=\"30px\"\n              fontWeight=\"bold\"\n            >\n              STATUS DASHBOARD\n            </Text>\n          </Box>\n        </TopMenu>\n        <Box mt=\"5%\" mb=\"5%\" justifyContent=\"center\">\n          <CardsGrid>\n            {apiData?.map((card, index) => (\n              <Box key={index}>\n                <Card>\n                  <Box>\n                    <Text\n                      color=\"white\"\n                      fontSize=\"25px\"\n                      fontWeight=\"bold\"\n                    >\n                      {splitName(card?.data?.hostname, '-')}\n                    </Text>\n                  </Box>\n                  <Box width=\"90%\" margin=\"10px\" padding=\"5px\"\n                    bgColor={card?.data?.message?.includes('Healthy') ? '#68dd97' : '#e53b3b'}\n                  >\n                    {splitName(card?.data?.message, ':') ?? 'Error'}\n                  </Box>\n                  <Box>\n                    <Text\n                      color=\"white\"\n                      fontSize=\"15px\"\n                    >\n                      {\n                        card?.data?.result != 'rejected' ?\n                          card?.data?.hostname\n                          : (\n                            <div style={{ color: '#e53b3b', display:'flex', flexDirection:'column', gap:8 }}>\n                              <div>{card?.data?.errMessage?.toUpperCase()}</div>\n                              <div>{card?.data?.statusCode}</div>\n                              <div>{card?.data?.statusText}</div>\n                            </div>\n                          )\n                      }\n                    </Text>\n                  </Box>\n                  <Box>\n                    <Text\n                      color=\"white\"\n                      fontSize=\"15px\"\n                    >\n                      {convertUnixToTime(card?.data?.time)}\n                    </Text>\n                  </Box>\n                </Card>\n              </Box>\n            ))}\n          </CardsGrid>\n        </Box>\n\n      </Box>\n\n    </>\n  );\n}\n\nexport default Home;\n"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,gBAApB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB,C,CAEA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,SAASC,SAAT,QAA0B,UAA1B,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,yBAApB,QAAqD,uBAArD;AACA,SAASC,iBAAT,QAAkC,8BAAlC,C,CAEA;;AACA,MAAMC,uBAAuB,GAAG,KAAhC;AAEA,MAAMC,SAAS,GAAG,CAChB,oDADgB,EAEhB,kDAFgB,EAGhB,qDAHgB,EAIhB,sDAJgB,EAKhB,mDALgB,EAMhB,qDANgB,EAOhB,iDAPgB,EAQhB,mDARgB,EAShB,iDATgB,EAUhB,oDAVgB,EAWhB,sDAXgB,EAYhB,kDAZgB,EAahB,oDAbgB,EAchB,yDAdgB,EAehB,iDAfgB,EAgBhB,qDAhBgB,EAiBhB,iDAjBgB,EAkBhB,qDAlBgB,CAAlB;;AAqBA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMkB,OAAO,GAAG,YAAY;IAE1B,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYP,SAAS,CAACQ,GAAV,CAAc,MAAMC,GAAN,IAAa;MAC3D,IAAI;QACF,OAAO,MAAMrB,KAAK,CAACsB,GAAN,CAAUD,GAAV,CAAb;MACD,CAFD,CAEE,OAAOE,KAAP,EAAc;QAAA;;QACd,OAAO;UACLC,IAAI,EAAE;YACJC,QAAQ,EAAEhB,yBAAyB,CAACY,GAAD,EAAM,GAAN,CAD/B;YAEJK,MAAM,EAAE,UAFJ;YAGJC,UAAU,oBAAEJ,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEK,OAAT,2DAAoB,OAH1B;YAIJC,UAAU,EAAE,CAAAN,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEO,QAAP,oEAAiBC,MAAjB,KAA2B,CAA3B,GAA+B,KAA/B,GAAuCR,KAAvC,aAAuCA,KAAvC,2CAAuCA,KAAK,CAAEO,QAA9C,qDAAuC,iBAAiBC,MAJhE;YAKJC,UAAU,EAAE,CAAAT,KAAK,SAAL,IAAAA,KAAK,WAAL,gCAAAA,KAAK,CAAEO,QAAP,sEAAiBE,UAAjB,KAA+B,EAA/B,GAAoC,qBAApC,GAA4DT,KAA5D,aAA4DA,KAA5D,2CAA4DA,KAAK,CAAEO,QAAnE,qDAA4D,iBAAiBE;UALrF;QADD,CAAP;MASD;IACF,CAdiC,CAAZ,CAAtB;IAeAjB,UAAU,CAACE,OAAD,CAAV;EACD,CAlBD;;EAoBAlB,SAAS,CAAC,MAAM;IACdiB,OAAO;IACP,MAAMiB,IAAI,GAAGC,WAAW,CAAClB,OAAD,EAAUL,uBAAV,CAAxB;IACA,OAAO,MAAMwB,aAAa,CAACF,IAAD,CAA1B;EACD,CAJQ,EAIN,EAJM,CAAT;EAMA,OACE,0BACE,IAAC,GAAD;IACE,SAAS,EAAC,WADZ;IAEE,aAAa,EAAC,KAFhB;IAGE,cAAc,EAAC,QAHjB;IAIE,GAAG,EAAE3B,MAAM,CAAC8B,SAJd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAME,IAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,IAAC,GAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,IAAC,IAAD;IACE,KAAK,EAAC,OADR;IAEE,QAAQ,EAAC,MAFX;IAGE,UAAU,EAAC,MAHb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBADF,CADF,CANF,EAiBE,IAAC,GAAD;IAAK,EAAE,EAAC,IAAR;IAAa,EAAE,EAAC,IAAhB;IAAqB,cAAc,EAAC,QAApC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,IAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGtB,OADH,aACGA,OADH,uBACGA,OAAO,CAAEM,GAAT,CAAa,CAACiB,IAAD,EAAOC,KAAP;IAAA;;IAAA,OACZ,IAAC,GAAD;MAAK,GAAG,EAAEA,KAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,IAAC,IAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,IAAC,GAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,IAAC,IAAD;MACE,KAAK,EAAC,OADR;MAEE,QAAQ,EAAC,MAFX;MAGE,UAAU,EAAC,MAHb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAKG9B,SAAS,CAAC6B,IAAD,aAACA,IAAD,qCAACA,IAAI,CAAEb,IAAP,+CAAC,WAAYC,QAAb,EAAuB,GAAvB,CALZ,CADF,CADF,EAUE,IAAC,GAAD;MAAK,KAAK,EAAC,KAAX;MAAiB,MAAM,EAAC,MAAxB;MAA+B,OAAO,EAAC,KAAvC;MACE,OAAO,EAAEY,IAAI,SAAJ,IAAAA,IAAI,WAAJ,mBAAAA,IAAI,CAAEb,IAAN,2EAAYI,OAAZ,oEAAqBW,QAArB,CAA8B,SAA9B,IAA2C,SAA3C,GAAuD,SADlE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,iBAGG/B,SAAS,CAAC6B,IAAD,aAACA,IAAD,sCAACA,IAAI,CAAEb,IAAP,gDAAC,YAAYI,OAAb,EAAsB,GAAtB,CAHZ,mDAG0C,OAH1C,CAVF,EAeE,IAAC,GAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,IAAC,IAAD;MACE,KAAK,EAAC,OADR;MAEE,QAAQ,EAAC,MAFX;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAKI,CAAAS,IAAI,SAAJ,IAAAA,IAAI,WAAJ,2BAAAA,IAAI,CAAEb,IAAN,4DAAYE,MAAZ,KAAsB,UAAtB,GACEW,IADF,aACEA,IADF,sCACEA,IAAI,CAAEb,IADR,gDACE,YAAYC,QADd,GAGI;MAAK,KAAK,EAAE;QAAEe,KAAK,EAAE,SAAT;QAAoBC,OAAO,EAAC,MAA5B;QAAoCC,aAAa,EAAC,QAAlD;QAA4DC,GAAG,EAAC;MAAhE,CAAZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAMN,IAAN,aAAMA,IAAN,sCAAMA,IAAI,CAAEb,IAAZ,yEAAM,YAAYG,UAAlB,0DAAM,sBAAwBiB,WAAxB,EAAN,CADF,EAEE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAMP,IAAN,aAAMA,IAAN,sCAAMA,IAAI,CAAEb,IAAZ,gDAAM,YAAYK,UAAlB,CAFF,EAGE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAMQ,IAAN,aAAMA,IAAN,sCAAMA,IAAI,CAAEb,IAAZ,gDAAM,YAAYQ,UAAlB,CAHF,CARR,CADF,CAfF,EAiCE,IAAC,GAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,IAAC,IAAD;MACE,KAAK,EAAC,OADR;MAEE,QAAQ,EAAC,MAFX;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAIGtB,iBAAiB,CAAC2B,IAAD,aAACA,IAAD,sCAACA,IAAI,CAAEb,IAAP,gDAAC,YAAYqB,IAAb,CAJpB,CADF,CAjCF,CADF,CADY;EAAA,CAAb,CADH,CADF,CAjBF,CADF,CADF;AA0ED,CAvGD;;GAAMhC,I;;KAAAA,I;AAyGN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}